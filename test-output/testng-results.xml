<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="235024" started-at="2022-09-27T04:58:17 PDT" finished-at="2022-09-27T05:02:12 PDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="235024" started-at="2022-09-27T04:58:17 PDT" finished-at="2022-09-27T05:02:12 PDT">
      <class name="com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle">
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="setupMethod" is-config="true" duration-ms="51230" started-at="2022-09-27T04:58:19 PDT" finished-at="2022-09-27T04:59:10 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="insurance_Calculate(java.lang.Object)[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="insurance_Calculate" duration-ms="41744" started-at="2022-09-27T04:59:10 PDT" data-provider="vehData" finished-at="2022-09-27T04:59:51 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Insurant_Country=India, Vehicle_Annual_Mileage=100.0, Insurant_Firstname=prakash, Insurant_Lastname=NNNN, Producy_Damageinsurance=Partial Coverage, Vehicle_Date_Of_Manufacture=09-Apr-2001, Insurant_Hobby=Speeding,Other, Product_Start_Date=12-Dec-2020, priceValidation_Platinum=1379.0, Product_Optionalproduct=Euro Protection, Vehicle_Eng_Performance=666.0, Vehicle_Make=Honda, Vehicle_List_Price=888.0, priceValidation_Silver=701.0, priceValidation_Ultimate=2621.0, Inusrant_Gender=Male, TC no=1.0, Vehicle_Model=Motor_Cycle, Insurant_DateofBirth=12-Dec-1996, Insurant_Occupation=Farmer, Vehicle_No_of_Seats_Motorcycle=2.0, Vehicle_CylinderCapcity=333.0, priceValidation_Gold=238.0, TC Name=Verify Insurance  premium for Honda Motor Cycle, Insurant_Zipcode=444061.0, Product_Insurancesum=5.000.000,00, select_Option=Silver, ?=?}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (2ddd75dafbdb665bdc2cf01311b11cc1)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (2ddd75dafbdb665bdc2cf01311b11cc1)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model
at com.reusablecomponent.Common_Methods.selectDropdownOption(Common_Methods.java:22)
at com.pageobjects.Enter_Vehicle_DataPage.enter_VechicleData(Enter_Vehicle_DataPage.java:80)
at com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle.insurance_Calculate(EndtoEnd_Test_Motorcycle.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insurance_Calculate -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="cleanup" is-config="true" duration-ms="2296" started-at="2022-09-27T04:59:54 PDT" finished-at="2022-09-27T04:59:56 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="setupMethod" is-config="true" duration-ms="24140" started-at="2022-09-27T04:59:56 PDT" finished-at="2022-09-27T05:00:20 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="insurance_Calculate(java.lang.Object)[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="insurance_Calculate" duration-ms="20000" started-at="2022-09-27T05:00:20 PDT" data-provider="vehData" finished-at="2022-09-27T05:00:40 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Insurant_Country=Sweden, Vehicle_Annual_Mileage=100.0, Insurant_Firstname=Seema, Insurant_Lastname=NNNN, Producy_Damageinsurance=Partial Coverage, Vehicle_Date_Of_Manufacture=09-Apr-2001, Insurant_Hobby=Speeding,Other, Product_Start_Date=12-Dec-2025, priceValidation_Platinum=1379.0, Product_Optionalproduct=Euro Protection, Vehicle_Eng_Performance=900.0, Vehicle_Make=Volvo, Vehicle_List_Price=888.0, priceValidation_Silver=702.0, priceValidation_Ultimate=2622.0, Inusrant_Gender=Female, TC no=2.0, Vehicle_Model=Scooter, Insurant_DateofBirth=12-Dec-1998, Insurant_Occupation=Farmer, Vehicle_No_of_Seats_Motorcycle=2.0, Vehicle_CylinderCapcity=900.0, priceValidation_Gold=238.0, TC Name=Verify Insurance  premium for Volvo Scooter, Insurant_Zipcode=444061.0, Product_Insurancesum=20.000.000,00, select_Option=Gold, ?=?}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (38f334f04f96d563c59a728733ad79a2)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (38f334f04f96d563c59a728733ad79a2)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model
at com.reusablecomponent.Common_Methods.selectDropdownOption(Common_Methods.java:22)
at com.pageobjects.Enter_Vehicle_DataPage.enter_VechicleData(Enter_Vehicle_DataPage.java:80)
at com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle.insurance_Calculate(EndtoEnd_Test_Motorcycle.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insurance_Calculate -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="cleanup" is-config="true" duration-ms="1507" started-at="2022-09-27T05:00:40 PDT" finished-at="2022-09-27T05:00:42 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="setupMethod()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="setupMethod" is-config="true" duration-ms="38904" started-at="2022-09-27T05:00:42 PDT" finished-at="2022-09-27T05:01:21 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="FAIL" signature="insurance_Calculate(java.lang.Object)[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="insurance_Calculate" duration-ms="47464" started-at="2022-09-27T05:01:21 PDT" data-provider="vehData" finished-at="2022-09-27T05:02:08 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Insurant_Country=Sweden, Vehicle_Annual_Mileage=100.0, Insurant_Firstname=Savali, Insurant_Lastname=NNNN, Producy_Damageinsurance=Partial Coverage, Vehicle_Date_Of_Manufacture=09-Apr-2001, Insurant_Hobby=Speeding,Other, Product_Start_Date=12-Dec-2027, priceValidation_Platinum=507.0, Product_Optionalproduct=Euro Protection, Vehicle_Eng_Performance=100.0, Vehicle_Make=Ford, Vehicle_List_Price=1000.0, priceValidation_Silver=87.0, priceValidation_Ultimate=967.0, Inusrant_Gender=Female, TC no=3.0, Vehicle_Model=Moped, Insurant_DateofBirth=12-Dec-1999, Insurant_Occupation=Farmer, Vehicle_No_of_Seats_Motorcycle=2.0, Vehicle_CylinderCapcity=100.0, priceValidation_Gold=238.0, TC Name=Verify Insurance premium for Ford Moped, Insurant_Zipcode=444061.0, Product_Insurancesum=2.000.000,00, select_Option=Ultimate, ?=?}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (ef93d5dabe73997d5644db781ce62a0f)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: value is not present in dropdown for WebElement:[[ChromeDriver: chrome on WINDOWS (ef93d5dabe73997d5644db781ce62a0f)] -> xpath: //select[@id='model']]Value to be selected is:Vehicle_Model
at com.reusablecomponent.Common_Methods.selectDropdownOption(Common_Methods.java:22)
at com.pageobjects.Enter_Vehicle_DataPage.enter_VechicleData(Enter_Vehicle_DataPage.java:80)
at com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle.insurance_Calculate(EndtoEnd_Test_Motorcycle.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insurance_Calculate -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle@750e2b97]" name="cleanup" is-config="true" duration-ms="2692" started-at="2022-09-27T05:02:09 PDT" finished-at="2022-09-27T05:02:12 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- com.insurance_calaculation_motorcycle.EndtoEnd_Test_Motorcycle -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
